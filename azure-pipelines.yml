trigger:
- none

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e0c3dff1-f23e-4604-a8c8-68e6128adf18'
  imageRepository: 'dockerjavascript'
  containerRegistry: 'learningpurposebyaarij.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  imagePullSecret: 'aksdevopsacr21364011-auth'
  tag: '$(Build.BuildId)'
  k8sNamespace: 'calico-system'

pool:
  name: TRAPEZE-AGENT

steps:

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'App-Configurations'
#     scriptType: 'ps'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       # Build the Docker image
#       docker build -t learningpurposebyaarij.azurecr.io/web-game:tag -f Dockerfile 2048-game
      
#       # Log in to Azure Container Registry (ACR)
#       az acr login --name learningpurposebyaarij
      
#       # Push the Docker image to ACR
#       docker push learningpurposebyaarij.azurecr.io/web-game:tag

- task: Docker@2
  displayName: Build and push an image to container registry
  inputs:
    containerRegistry: '$(dockerRegistryServiceConnection)'
    repository: 'web-game'
    command: 'buildAndPush'
    Dockerfile: '**/*Dockerfile'
    tags: '$(tag)'

- powershell: Get-Content 01_kubernetes_aks/app-deploy.yaml

- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'App-Configurations'
    azureResourceGroup: 'Learning-Purpose'
    kubernetesCluster: 'Learning_Purpose'
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: true
    configuration: '01_kubernetes_aks'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    azureSubscriptionEndpointForSecrets: 'App-Configurations'
    azureContainerRegistry: 'learningpurposebyaarij.azurecr.io'
    forceUpdate: false